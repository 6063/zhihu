<style lang="less">
/**app.wxss**/
.container{
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  background: #F0F4F3;
  padding: 0;
  font-size: 14rpx;
  color: #000;
  &.withtab{
    margin: 105rpx 0 0 0;
  }
  .feed-item{
    width: 690rpx;
    padding: 30rpx 30rpx 20rpx;
    margin: 7rpx 0 6rpx 0;
    background: #ffffff;
    border-top: 1px solid #eee;
    border-bottom: 1px solid #eee;
    box-shadow: 0 2px 5px #eeeeee;
    .feed-source{
      width: 690rpx;
      left: 0;
      height: 50rpx;
      .avatar{
        position: relative;
        display: inline-block;
        image{
          display: inline-block;
          width: 45rpx;
          height: 45rpx;
          border-radius: 45rpx;
          top: 10rpx;
          vertical-align: middle;
        }
      }
      a{
        display: inline-block;
        height: 40rpx;
      }
      text{
        display: inline-block;
        height: 40rpx;
        line-height: 40rpx;
        vertical-align: middle;
        margin: 0 0 0 15rpx;
        color: #3a3;
        font-size: 26rpx;
      }
      .item-more{
        display: inline-block;
        width: 40rpx;
        height: 45rpx;
        float: right;
      }
    }
    .feed-content{
      padding: 10rpx 0 0 0;
      .question text{
        font-size: 28rpx;
        font-weight: 600px;
        line-height: 40rpx;
        text-space: 5rpx;
      }
      .answer-body{
        padding: 10rpx 0 0 0;
        font-size:27rpx;
        line-height:32rpx;
        color:#3a6;

      }
      .answer-actions{
        width: 690rpx;
        padding: 10rpx 0  0;
        color: #f6a;
        view{
          display: inline-block;
          vertical-align: text-bottom;
          padding: 0 10rpx 0 0;
          font-size: 24rpx;
        }
        .dot ::after{
          content: "•";
        }
      }

    }
  }
}
.flex-wrp{
  display: flex;
}
.flex-tab{
  flex-flow: row nowrap;
  justify-content: space-around;
  align-items: stretch;
}
.flex-item{
  flex-grow: 1;
  text-align: center;
}
.top-tab{
  width: 750rpx;
  height: 100rpx;
  background: #298DE5;
  color: #8CCEFD;
  font-size: 28rpx;
  line-height: 100rpx;
  box-shadow: 0 2px 2px #bebebe;
  margin: 0 0 8rpx 0;
  position: fixed;
  top: 0;
  z-index: 9999;
}
.toptab.active{
  color: #ffffff;
  border-bottom: solid 2px #ffffff;
}







</style>

<script>
import wepy from 'wepy'

export default class extends wepy.app {
  config = {
    pages: [
      "pages/index",
      "pages/discovery",
      "pages/notify",
      "pages/chat",
      "pages/more",
      "pages/answer",
      "pages/question"
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#0068C4',
      navigationBarTitleText: '知乎',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
    color: "#626567",
    selectedColor: "#2A8CE5",
    backgroundColor: "#FBFBFB",
    borderStyle: "white",
    list: [{
      pagePath: "pages/index",
      text: "首页",
      iconPath: "images/index.png",
      selectedIconPath: "images/index_focus.png"
    }, {
      pagePath: "pages/discovery",
      text: "发现",
      iconPath: "images/discovery.png",
      selectedIconPath: "images/discovery_focus.png"
    }, {
      pagePath: "pages/notify",
      text: "通知",
      iconPath: "images/ring.png",
      selectedIconPath: "images/ring_focus.png"
    }, {
      pagePath: "pages/chat",
      text: "聊天",
      iconPath: "images/chat.png",
      selectedIconPath: "images/chat_focus.png"
    }, {
      pagePath: "pages/more",
      text: "我的",
      iconPath: "images/burger.png",
      selectedIconPath: "images/burger_focus.png"
    }]
  }
  }

  

  onLaunch() {
    //调用API从本地缓存中获取数据
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)
  }
  getUserInfo = (cb) =>{    
    if(this.globalData.userInfo){
      typeof cb == "function" && cb(this.$parent.userInfo)
    }else{
      //调用登录接口
     
      wx.login({
        success: res => {          
          wx.getUserInfo({
            success: res =>  {
              this.$parent.userInfo = res.userInfo
              typeof cb == "function" && cb(this.$parent.userInfo)
            }
          })
        }
      })
    }
  }
  globalData = {
    userInfo:null
  }
 
}
</script>
